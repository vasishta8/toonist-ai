import os
from dotenv import load_dotenv
from groq import Groq  # Import Groq's SDK
from langchain_groq import ChatGroq
from langchain import LLMChain
from langchain.prompts import PromptTemplate
from imagegeneration import generate_image
import json
import re
load_dotenv()
groq_api_key = os.getenv("GROQ_API_KEY")
client = Groq(
    api_key= groq_api_key 
)

def extract_json(text):
    match = re.search(r"\{.*\}", text, re.DOTALL)
    return match.group(0) if match else None

text_input = """ A simple definition of a natural disaster is an adverse event initiated by natural processes, such as a sudden change in the earthâ€™s crust or climate. There are plenty of categories that we can use to distinguish natural disasters, but here are the fundamental three:

Geological disasters
Hydrological disasters
Meteorological disaster
These basic categorisations, however, have been blurred in recent years with the growing threat of climate change. Natural disasters that scientists predict may not have happened either with as much frequency, or intensity has been caused by the warmer climate, the rising sea levels, and the breakdown of ecosystems. In this way, the definition of what is a natural disaster and a man-made disaster in Geography is less clear than it has been previously.

Geologicalnatural disasters for kids
Avalanches and Landslides - This is when material runs down a slope of some kind. In the case of an avalanche, this will be snow that has either built up in a vulnerable position or fallen because of a sudden warm climate that has weakened the structure of the ice underneath. It is the same principle for landslides, which tend to occur because of weakened material on mountainsides. This can be because of rain, or excavation. Mines also tend to experience landslides because of the removal of supporting material when harvesting metal or other minerals.



Earthquakes - When the earthâ€™s crust moves, and two plates either converge or shift over one another, a huge amount of energy is released. An earthquake is a result of that energy transferring into seismic waves, which move everything around it. Depending on where the epicentre (the point directly above the collision) is, often determines the consequences. Earthquakes, themselves, are typically not the reason for the damage, but secondary events such as tsunamis, building collapses, and volcanic eruptions are hugely disastrous.



Volcanic eruptions - As mentioned, volcanic eruptions are also a result of the energy that is generated by the movement of tectonic plates. When the earthâ€™s crust generates this energy, some of this travels in the form of heat. Under the earth's surface, it becomes hot enough for the rock to melt and become magma. This molten rock is lighter than the surrounding rock, so starts travelling to the surface, where it eventually explodes out in the form of a volcano. The molten lava, however, is often not the primary concern. The extremely hot gases and clumps of rock that take flight create a deadly pyroclastic flow. The speed with which this travels is typically how the disastrous effects are caused.

Hydrologicalnatural disasters for kids
Floods - Floods can be caused for a number of reasons, and are not always disasters, therefore making the definition of this natural disaster hard to establish in Geography. Floods are an influx of water in an area that is typically dry and is inhabited by humans, such as a city, town or village. This may be caused by unprecedented levels of rain that either flood valleys, or burst boundaries where water is ordinarily contained. It can also be caused by the sudden melting of glaciers, where water travels from high latitudes to lower ground. Sometimes floods are welcomed, especially in natural or rural landscapes, because they can enrich the soil. Check out this page on floodplains for more information about how floods in certain areas of the world are not disasters at all.



Tsunamis - This kind of natural disaster is the earthquakeâ€™s seismic waves having a repercussion on the water. Tsunamis are often far more devastating than earthquakes, in that the waves can travel as far as 16 km on land after reaching the coast. And tsunamis do not consist solely of one wave, they usually possess a wave train where four or five waves may arrive after the initial wave hits. There can be up to 100 miles between a seismic wave, meaning the subsequent waves can arrive anywhere between five minutes and two hours later. Check out our tsunami wiki for more information.

Limnic eruptions - These are far less common than the other hydrological natural disasters, as only two events of this kind have been observed. Limnic eruptions or a lake overturn as it is sometimes called, are when pockets of carbon dioxide that have long been sequestered under a body of water, then erupt, travel to the surface, and asphyxiate the humans, animals, and wildlife nearby.

Meteorologicalnatural disasters for kids
Cyclones and hurricanes - These names are used interchangeably, depending on which sea or ocean the event is taking place. Fundamentally, a hurricane occurs when warm moist air begins to rise over the water. When this process continues, large swathes of heavy clouds, a storm, start to swirl. This is because of the earthâ€™s Coriolis Effect, which dictates that anything suspended or in motion over long distances starts to detour from a straight line. When a cyclone reaches land it can be dangerous because it inflicts extreme winds, rainfall, and flooding that can have detrimental effects on the area.



Heatwaves and droughts - These are significant periods of excessively hot weather, which can cause a number of issues, such as deaths from overheating, crop failure, and wildfires. In hot areas of woodland, trees are often dried up by the sun, making them easily flammable and capable of spreading fire to neighbouring trees and buildings.



Blizzards and hail storms - This is when high winds stir up snow that has already fallen, obstructing travel, medical care, and agriculture. Sometimes precipitation, rain, will freeze while in very cold conditions and remains frozen after hitting the ground."""

prompt = """
Write a **fun, dramatic, and engaging comic story** based on the provided text and format it into structured JSON for a comic book layout.  

Make sure to **incorporate most of the educational content seamlessly into the story** rather than making it feel random or forced.  

The story can be **3-4 pages long**, ensuring **strong storytelling and a logical buildup to the educational content.**  

---

### **Story Structure Guidelines:**  
- The story should be **exciting, adventurous, and suitable for kids aged 6-8 years**.  
- **There is always a villain** who creates a challenge or problem related to the educational content.  
- **Famous superheroes will act as educators** and help resolve the conflict.  
- **Ensure a happy ending.**  
- **Make sure the story and the education content are interconnected.** Avoid random, unrelated lessons.  
- **Use static, easy-to-draw scenes** for each moment.  

The story is structured into **multiple pages**, with each page containing **exactly 7 panels**:  
  - **Panels 1-6**: Progress the story through action, conflict, and character interactions (**Max 20 words per dialogue**).  
  - **Panel 7**: **Dr. Gyaan explains an educational concept** in a fun and engaging way.  
    - **Dr. Gyaan is a wise character** who educates superheroes and readers.  
    - **The scene for Dr. Gyaan must always be `null`.**  
    - **Dr. Gyaanâ€™s dialogue can be up to 60 words, summarizing the educational content.**  

---

### **JSON Output Guidelines:**  
- **Output must be in valid JSON format.**  
- **No extra messages, headers, or explanationsâ€”only JSON.**  
- **Each panel must have:**  
  - `"scene"`: A static description of the moment (**concise and visual**).  
  - `"dialogue"`:  
    - `"speaker"`: Name of the character speaking (e.g., `"Spider-Man"`, `"Narrator"`, or `"Dr. Gyaan"` in Panel 7).  
    - `"text"`: A good, engaging, fitting dialogue (max **20 words**, except for Dr. Gyaan).  

---

### **Important Instructions:**  
ðŸš« **Do NOT copy the example belowâ€”generate fresh, unique content dynamically from the text provided in the end.**  
âœ… **Ensure every panel logically follows the previous one.**  
âœ… **Narrators should be used only when necessary.**  
âœ… **Villains should have an engaging motivation or challenge.**  
âœ… **Dr. Gyaan must always appear in the final panel of each page.**  

---

### **Expected JSON Output Format (Reference Only â€“ DO NOT COPY)**  
{
  "pages": [
    {
      "page_number": 1,
      "panels": [
        {
          "panel_number": 1,
          "scene": "X",
          "dialogue": { "speaker": "Y", "text": "Z" }
        },
        //Continue doing panel 2-5
        {
          "panel_number": 7,
          "scene": null,
          "dialogue": { "speaker": "Dr. Gyaan", "text": "V" }
        }
      ]
    }
  ]
}
Text to create the comic story based on: 

"""
text_input2 = "types of rocks on earth and how they're formed."
prompt1 = prompt + text_input
response = client.chat.completions.create(
            #model="mixtral-8x7b-32768",  
            model = "llama-3.3-70b-versatile",
            messages=[{"role": "user", "content": prompt1}],
            temperature=0.95
        )

output = extract_json(response.choices[0].message.content)

try:
  json_output=json.loads(output)
except:
  json_output=json.loads(output)
with open('story_output.txt', 'w') as file:
    file.write(output)

image_prompt = '''You are tasked with generating a **detailed comic book scene description** based on the following scene text and context. The goal is to generate a **standard comic book-style image** suitable for the scene in question.

### **Instructions:**
1. **Context**: You will receive the **scene description** for the current panel in a comic book. Additionally, you will be given the **scene descriptions of previous panels** to provide the necessary context for the ongoing narrative.
2. **Create a comic book image**: Based on the provided scene description and context, generate a detailed **comic book-style image prompt** for the current panel. The image should be drawn in a **Marvel comic book style** with dynamic, bold imagery and dramatic perspectives. 
3. **Ensure continuity**: Use the context from previous scenes to maintain **visual consistency**, ensuring characters, actions, and settings follow a logical progression.
4. **Include visual elements** like lighting, action, character positioning, and the environment. The description should be **detailed** to guide the artist in creating the image.

### **Formatting:**
- Your response should be in **JSON format** with **two keys**: 
  - **`scene_description`**: A detailed description of the scene, capturing visual elements, action, lighting, and environment.
  - **`summary`**: A concise summary of the scene, capturing the essence, context, and mood of the scene.

### **Input Example:**

**Current Scene (Panel 3):**  
*Spider-Man swings into action to stop a villain who is causing destruction in the city.*

**Previous Scenes:**
1. *Spider-Man is perched on top of a building, overlooking the city.*
2. *The villain, Dr. Octopus, unleashes mechanical tentacles to wreak havoc.*

### **Expected Output Example:**
```json
{
  "scene_description": "Spider-Man swings into action, his webbing creating streaks in the air. The city skyline looms in the background as Dr. Octopusâ€™s mechanical tentacles lash out, causing chaos below. The sun is setting, casting long shadows and creating an orange glow. Spider-Manâ€™s suit is vibrant, contrasting against the destruction below. The scene captures the intensity of the battle, with dynamic lines and dramatic shading, characteristic of classic Marvel comic book illustrations.",
  "summary": "Spider-Man swings into action to stop Dr. Octopus, whose mechanical tentacles are causing chaos in the city. The battle intensifies against a backdrop of the setting sun."
}

Current scene that you need to create an image prompt for is : 
'''

first_prompt=PromptTemplate(template=image_prompt)
llm=ChatGroq(model="llama-3.1-8b-instant",temperature=0.7)
first_llm_chain=LLMChain(llm=llm,prompt=first_prompt)
print("done till now")

def speaker_text(input_dict):
    str=''
    str+=input_dict.get('speaker')
    str+=':'
    str+=input_dict.get('text')
    return SyntaxWarning
def process_json2(json_output):
    pages = json_output.get("pages", []) 
    previous_summary = ""
    scene_summary_list = [] 
    output_list=[]
    for page in pages:
        panels = page.get("panels", []) 
        panel_no = 1
        page_output_list=[]
        for panel in panels:
            scene_desc = panel.get("scene", None)
            image_path=''
            if scene_desc:
                prompt_input = "\nCurrent Scene: " + scene_desc + " Previous Scene's Summary: " + previous_summary
                response = client.chat.completions.create( 
                              model = "llama-3.3-70b-versatile",
                              messages=[{"role": "user", "content": image_prompt+prompt_input}],
                              temperature=0.95
                            )
                img_prompt = extract_json(response.choices[0].message.content)
                img_prompt = extract_json(img_prompt)
                img_json = json.loads(img_prompt)
                scene_description = img_json.get('scene_description', 'No description provided')
                summary = img_json.get('summary', 'No summary provided')
                scene_summary_list.append({
                    'scene': scene_description,
                    'summary': summary
                })
                #print(scene_description)
                image_path=f"page_{page['page_number']}_panel_{panel_no}"
                print(scene_description)
                generate_image(scene_description, f"page_{page['page_number']}_panel_{panel_no}")
                previous_summary = summary
            dialogue=panel.get('dialogue')
            panel_output_list=[panel_no,dialogue,image_path]
            page_output_list.append(panel_output_list)
          

            panel_no += 1
        output_list.append(page_output_list)
    print(output_list)
    return scene_summary_list

scenes_summaries = process_json2(json_output)
print(scenes_summaries)